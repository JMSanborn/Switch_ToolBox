Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
$plinkPath = Join-Path $scriptDir "plink.exe"

# Font settings
$font = New-Object System.Drawing.Font("Segoe UI", 12)

# Create Form
$form = New-Object System.Windows.Forms.Form
$form.Text = "SSH Show Tech Tool"
$form.Size = New-Object System.Drawing.Size(500, 450)
$form.StartPosition = "CenterScreen"
$form.Font = $font

# Create fields
$labels = @("Switch IP:", "Username:", "Password:", "Output File (auto):")
$controls = @{}

for ($i = 0; $i -lt $labels.Length; $i++) {
    $label = New-Object System.Windows.Forms.Label
    $label.Text = $labels[$i]
    $label.Location = New-Object System.Drawing.Point(20, (30 + $i * 60))
    $label.Size = New-Object System.Drawing.Size(160, 30)
    $label.Font = $font
    $form.Controls.Add($label)

    $textbox = New-Object System.Windows.Forms.TextBox
    $textbox.Location = New-Object System.Drawing.Point(190, (30 + $i * 60))
    $textbox.Size = New-Object System.Drawing.Size(260, 30)
    $textbox.Font = $font
    if ($labels[$i] -like "*Password*") {
        $textbox.UseSystemPasswordChar = $true
    }
    $controls[$labels[$i]] = $textbox
    $form.Controls.Add($textbox)
}

# Output Text Box
$outputBox = New-Object System.Windows.Forms.TextBox
$outputBox.Location = New-Object System.Drawing.Point(20, 280)
$outputBox.Size = New-Object System.Drawing.Size(430, 30)
$outputBox.Font = $font
$outputBox.ReadOnly = $true
$form.Controls.Add($outputBox)

# Run Button
$button = New-Object System.Windows.Forms.Button
$button.Text = "Run Show Tech"
$button.Size = New-Object System.Drawing.Size(200, 40)
$button.Location = New-Object System.Drawing.Point(150, 330)
$button.Font = $font
$form.Controls.Add($button)

# Auto-fill Output File on IP change
$controls["Switch IP:"].Add_TextChanged({
    $ip = $controls["Switch IP:"].Text.Trim()
    if ($ip -match '^\d{1,3}(\.\d{1,3}){3}$') {
        $autoPath = "C:\SwitchLogs\$ip`_show_tech.txt"
        $controls["Output File (auto):"].Text = $autoPath
    } else {
        $controls["Output File (auto):"].Text = ""
    }
})

# Button click event
$button.Add_Click({
    $ip = $controls["Switch IP:"].Text.Trim()
    $user = $controls["Username:"].Text.Trim()
    $pass = $controls["Password:"].Text
    $outFile = $controls["Output File (auto):"].Text.Trim()

    if (-not ($ip -and $user -and $pass -and $outFile)) {
        $outputBox.Text = "⚠️ Please fill in all fields."
        return
    }

    if (-not (Test-Path $plinkPath)) {
    $outputBox.Text = "❌ plink.exe not found at $plinkPath"
    return
}
    }

    $command = "terminal length 0 && show tech"

    try {
        # Ensure directory exists
        $outputDir = [System.IO.Path]::GetDirectoryName($outFile)
        if (-not (Test-Path $outputDir)) {
            New-Item -Path $outputDir -ItemType Directory | Out-Null
        }

        # Run SSH command
        & $plinkPath -ssh "$user@$ip" -pw $pass $command | Out-File -FilePath $outFile -Encoding utf8
        $outputBox.Text = "✅ Output saved to $outFile"
    } catch {
        $outputBox.Text = "❌ SSH failed or output could not be saved."
    }

# Show the form
$form.Topmost = $true
[void]$form.ShowDialog()
